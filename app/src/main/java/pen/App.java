/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pen;

import pen.tools.demo.DemoTool;

import java.util.ArrayDeque;
import java.util.List;
import java.util.Map;

public class App {
    //-------------------------------------------------------------------------
    // Instance variables

    public final static Map<String, Tool> TOOLS = Map.of(
        "demo",   new DemoTool()
//        "draw",  new DrawTool(),
//        "view", new ViewTool(),
//        "help",   new HelpTool()
    );

    //-------------------------------------------------------------------------
    // Launcher App

    /**
     * Gets the desired tool and executes it
     * @param args The arguments from the command line.
     */
    public void app(String[] args) {
        var argq = new ArrayDeque<>(List.of(args));

        if (argq.isEmpty()) {
            println("Usage: pen <subcommand> [<arguments...>]");
            println("");
            println("Run \"pen help\" for a list of subcommands.");
            System.exit(1);
        }

        var subcommand = argq.poll();
        var tool = TOOLS.get(subcommand);

        if (tool == null) {
            println("Error, unrecognized subcommand: \"" + subcommand + "\"");
            println("");
            println("Run \"pen help\" for a list of subcommands.");
            System.exit(1);
        }

        tool.start(args);
    }

    //-------------------------------------------------------------------------
    // Data Functions

    void println(String text) {
        System.out.println(text);
    }

    //-------------------------------------------------------------------------
    // Main
    public static void main(String[] args) {
        try {
            new App().app(args);
        } catch (AppError ex) {
            System.out.println("Error: " + ex.getMessage());
//            ex.printStackTrace(System.out);
        } catch (Exception ex) {
            System.out.println("Unexpected Exception Thrown: " + ex.getMessage());
            ex.printStackTrace(System.out);
        }
    }
}
